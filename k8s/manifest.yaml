apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: k8s-program
  - apiVersion: v1
    kind: Service
    metadata:
      name: usersdb
      namespace: k8s-program
    spec:
      clusterIP: None
      selector:
        app: usersdb-pod
      ports:
        - port: 5432
  - apiVersion: v1
    kind: Secret
    metadata:
      name: users-db-secret
      namespace: k8s-program
      labels:
        app: usersdb-pod
    data:
      POSTGRES_DB: dXNlcnM=
      POSTGRES_USER: YWRtaW4=
      POSTGRES_PASSWORD: YWRtaW4xMjM0
      PGPASSWORD: YWRtaW4xMjM0
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: usersdb-pod
      namespace: k8s-program
    spec:
      serviceName: usersdb-pod
      selector:
        matchLabels:
          app: usersdb-pod
      replicas: 1
      template:
        metadata:
          labels:
            app: usersdb-pod
        spec:
          containers:
            - name: usersdb-pod
              image: postgres:14.7
              ports:
                - containerPort: 5432
              envFrom:
                - secretRef:
                    name: users-db-secret
              volumeMounts:
                - mountPath: "/var/lib/postgresql/data"
                  name: pvc-users-storage
              startupProbe:
                exec:
                  command: [ "psql", "-U", "admin", "-d", "users", "-c", "SELECT 1" ]
                initialDelaySeconds: 15
                timeoutSeconds: 2
                failureThreshold: 3
                periodSeconds: 5
              readinessProbe:
                exec:
                  command: [ "psql", "-U", "admin", "-d", "users", "-c", "SELECT 1" ]
                initialDelaySeconds: 15
                timeoutSeconds: 2
              livenessProbe:
                exec:
                  command: [ "psql", "-U", "admin", "-d", "users", "-c", "SELECT 1" ]
                initialDelaySeconds: 45
                timeoutSeconds: 2
      volumeClaimTemplates:
        - metadata:
            name: pvc-users-storage
          spec:
            storageClassName: hostpath
            resources:
              requests:
                storage: 3Gi
            accessModes:
              - ReadWriteOnce
  - apiVersion: v1
    kind: Service
    metadata:
      name: usersapp
      namespace: k8s-program
    spec:
      type: NodePort
      selector:
        app: usersapp-pod
      ports:
        - protocol: "TCP"
          port: 8081
          targetPort: 8081
          nodePort: 32315
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: users-app-configmap
      namespace: k8s-program
      labels:
        app: usersapp-pod
    data:
      DB_URL: "jdbc:postgresql://usersdb:5432/users"
      DB_USERNAME: "admin"
      DB_PASSWORD: "admin1234"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: usersapp-pod
      namespace: k8s-program
    spec:
      strategy:
        type: RollingUpdate
      selector:
        matchLabels:
          app: usersapp-pod
      replicas: 2
      template:
        metadata:
          labels:
            app: usersapp-pod
            owner: igorpavlyushchik
        spec:
          containers:
            - name: usersapp-container
              image: igorpavlyushchik/users-application:1.0.0
              ports:
                - containerPort: 8081
              envFrom:
                - configMapRef:
                    name: users-app-configmap
              startupProbe:
                httpGet:
                  path: /actuator/health
                  port: 8081
                initialDelaySeconds: 15
                failureThreshold: 3
                periodSeconds: 15
              livenessProbe:
                httpGet:
                  path: /actuator/health/liveness
                  port: 8081
                failureThreshold: 2
                periodSeconds: 3
                successThreshold: 1
              readinessProbe:
                httpGet:
                  path: /actuator/health/readiness
                  port: 8081
                initialDelaySeconds: 15
                failureThreshold: 2
                periodSeconds: 3
                successThreshold: 1
  - apiVersion: v1
    kind: Service
    metadata:
      name: postsdb
      namespace: k8s-program
    spec:
      clusterIP: None
      selector:
        app: postsdb-pod
      ports:
        - port: 5432
          targetPort: 5432
  - apiVersion: v1
    kind: Secret
    metadata:
      name: posts-db-secret
      namespace: k8s-program
      labels:
        app: postsdb-pod
    data:
      POSTGRES_DB: cG9zdHM=
      POSTGRES_USER: YWRtaW4=
      POSTGRES_PASSWORD: YWRtaW4xMjM0
      PGPASSWORD: YWRtaW4xMjM0
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: postsdb-pod
      namespace: k8s-program
    spec:
      serviceName: postsdb-pod
      selector:
        matchLabels:
          app: postsdb-pod
      replicas: 1
      template:
        metadata:
          labels:
            app: postsdb-pod
        spec:
          containers:
            - name: postsdb-pod
              image: postgres:14.7
              ports:
                - containerPort: 5432
              envFrom:
                - secretRef:
                    name: posts-db-secret
              volumeMounts:
                - mountPath: "/var/lib/postgresql/data"
                  name: pvc-posts-storage
              startupProbe:
                exec:
                  command: [ "psql", "-U", "admin", "-d", "posts", "-c", "SELECT 1" ]
                initialDelaySeconds: 15
                timeoutSeconds: 2
                failureThreshold: 3
                periodSeconds: 5
              readinessProbe:
                exec:
                  command: [ "psql", "-U", "admin", "-d", "posts", "-c", "SELECT 1" ]
                initialDelaySeconds: 15
                timeoutSeconds: 2
              livenessProbe:
                exec:
                  command: [ "psql", "-U", "admin", "-d", "posts", "-c", "SELECT 1" ]
                initialDelaySeconds: 45
                timeoutSeconds: 2
      volumeClaimTemplates:
        - metadata:
            name: pvc-posts-storage
          spec:
            storageClassName: hostpath
            resources:
              requests:
                storage: 3Gi
            accessModes:
              - ReadWriteOnce
  - apiVersion: v1
    kind: Service
    metadata:
      name: postsapp
      namespace: k8s-program
    spec:
      type: NodePort
      selector:
        app: postsapp-pod
      ports:
        - protocol: "TCP"
          port: 8082
          targetPort: 8082
          nodePort: 32316
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: posts-app-configmap
      namespace: k8s-program
      labels:
        app: postsapp-pod
    data:
      DB_URL: "jdbc:postgresql://postsdb:5432/posts"
      DB_USERNAME: "admin"
      DB_PASSWORD: "admin1234"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: postsapp-pod
      namespace: k8s-program
    spec:
      strategy:
        type: RollingUpdate
      selector:
        matchLabels:
          app: postsapp-pod
      replicas: 2
      template:
        metadata:
          labels:
            app: postsapp-pod
            owner: igorpavlyushchik
        spec:
          containers:
            - name: postsapp-container
              image: igorpavlyushchik/posts-application:2.0.0
              ports:
                - containerPort: 8082
              envFrom:
                - configMapRef:
                    name: posts-app-configmap
              env:
                - name: USER_URL
                  value: "http://usersapp:8081/users/{id}/{increment}"
              startupProbe:
                httpGet:
                  path: /actuator/health
                  port: 8082
                initialDelaySeconds: 15
                failureThreshold: 3
                periodSeconds: 15
              livenessProbe:
                httpGet:
                  path: /actuator/health/liveness
                  port: 8082
                failureThreshold: 2
                periodSeconds: 3
                successThreshold: 1
              readinessProbe:
                httpGet:
                  path: /actuator/health/readiness
                  port: 8082
                initialDelaySeconds: 15
                failureThreshold: 2
                periodSeconds: 3
                successThreshold: 1
